---
- name: NTP Server configuration compliance for Network Elements
  hosts: "{{ my_devices }}"
  connection: network_cli
  gather_facts: "{{ my_facts }}"
  vars:
    erase: false
    required_servers: []
    in_servers: []
    out_servers: []

  tasks:
    - name: Read inputs and prepare configs
      set_fact:
        required_servers: "{{ required_servers }} + [ 'ntp server {{ item }}' ]"
      with_items: "{{ my_ntp_servers }}"
      no_log: True

    - name: Check existing NTP Servers
      include_role:
        name: ntpcheck
      when: ansible_network_os is defined

    # Adds NTP server entries in the my_ntp_servers variable if the variable erase is false
    - block:
      - name: Compare NTP servers and remove erroneous entries
        cli_config:
          config: no {{ item }}
        loop: "{{ configured_servers }}"
        when:
          - configured_servers | length > 0
          - item not in required_servers

      - name: Ensure intended NTP servers are present
        cli_config:
          config: "{{ item }}"
        loop: "{{ required_servers }}"
      when: not erase|bool

    # - name: Render template
    #   set_fact:
    #     rendered_template: "{{ lookup('template', 'report.j2') }}"

    - name: Save template to temporary file
      template:
        src: report.j2
        dest: ./temp.html
        mode: '0755'
      when: in_servers | length > 0 or out_servers | length > 0
    
    # Creates and uploads a report to S3 
    - name: Upload report to S3
      aws_s3:
        bucket: "{{ my_bucket }}"
        src: "./temp.html"
        object: "index.html"
        mode: put
        metadata: 'Content-Type=text/html'
      when: in_servers | length > 0 or out_servers | length > 0

    # Erases all ntp server entries if the variable erase is true
    - name: Remove all existing NTP server entries
      cli_config:
        config: no {{ item }}
      loop: "{{ configured_servers }}"
      when:
        - configured_servers | length > 0
        - erase|bool